var converter=new Showdown.converter({extensions:["github"]}),MarkdownEditor=React.createClass({displayName:"MarkdownEditor",getInitialState:function(){return{value:""}},readMarkdown:function(){$.ajax({url:this.props.callUri,dataType:"json",type:"GET",success:function(e){this.setState({value:e.markdown})}.bind(this),error:function(){}.bind(this)})},componentDidMount:function(){this.readMarkdown()},handleChange:function(){var e=this.refs.textarea.getDOMNode().value;this.setState({value:e}),$.ajax({url:this.props.callUri,dataType:"json",type:"POST",headers:{"X-XSRF-TOKEN":$('meta[name="_token"]').attr("content")},data:{markdown:this.state.value},success:function(){}.bind(this),error:function(){}.bind(this)})},render:function(){return React.createElement("div",{className:"MarkdownEditor"},React.createElement("div",{className:"col-lg-6"},React.createElement("h3",null,"Markdown Editor"),React.createElement("textarea",{rows:"20",className:"form-control",onChange:this.handleChange,ref:"textarea",value:this.state.value})),React.createElement("div",{className:"col-lg-6"},React.createElement("h3",null,"Preview"),React.createElement("div",{className:"preview",dangerouslySetInnerHTML:{__html:converter.makeHtml(this.state.value)}})))}});React.renderComponent(React.createElement(MarkdownEditor,{callUri:"/api/v1/markdown"}),document.querySelector(".markdown"));